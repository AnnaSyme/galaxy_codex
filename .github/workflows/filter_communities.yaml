name: Filter community tools

on:
  workflow_dispatch:

  # the workflow it triggered when all tools are fetched
  workflow_run:
      workflows: ["Fetch all tools"]
      types:
        - completed

  # the workflow it also triggered when the community definitions are changed
  push:
    paths:
    - 'data/communities**'
    branches: ["main"]

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "filter"
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  filter-all-tutorials:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      name: checkout results
      run: |
        git checkout results -- results
    - uses: actions/setup-python@v5
      with:
        python-version: '3.8' 
    - name: Install requirement
      run: python -m pip install -r requirements.txt
    - name: Run script
      run: | 
        bash bin/get_community_tutorials.sh
    - name: Commit results
      # commit the new filtered data, only if stuff was changed
      uses: s0/git-publish-subdir-action@develop
      env:
        BRANCH: results
        FOLDER: results
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: self
        SKIP_EMPTY_COMMITS: true

  update-tools-to-keep-exclude:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      name: checkout results
      run: |
        git checkout results -- results
    - uses: actions/setup-python@v5
      with:
        python-version: '3.8' 
    - name: Install requirement
      run: python -m pip install -r requirements.txt
    - name: Run script
      run: | 
        bash bin/update_tools_to_keep_exclude.sh
    - name: Commit results
      # commit the new filtered data, only if stuff was changed
      uses: s0/git-publish-subdir-action@develop
      env:
        BRANCH: results
        FOLDER: results
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: self
        SKIP_EMPTY_COMMITS: true
  
  filter-all-tools:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      name: checkout results
      run: |
        git checkout results -- results
    - uses: actions/setup-python@v5
      with:
        python-version: '3.8' 
    - name: Install requirement
      run: python -m pip install -r requirements.txt
    - name: Run script
      run: | 
        bash bin/get_community_tools.sh
    - name: Commit results
      # commit the new filtered data, only if stuff was changed
      uses: s0/git-publish-subdir-action@develop
      env:
        BRANCH: results
        FOLDER: results
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: self
        SKIP_EMPTY_COMMITS: true

  